==7462== Memcheck, a memory error detector
==7462== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==7462== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==7462== Command: ./parsing -m bronze -o output.json stdin.xml
==7462== Parent PID: 6074
==7462== 
==7462== Warning: set address range perms: large range [0xc073040, 0x3a29453f) (undefined)
==7462== Warning: set address range perms: large range [0xc073040, 0x3a294040) (defined)
==7462== Warning: set address range perms: large range [0x59c9d040, 0x87ebe53f) (undefined)
==7462== Warning: set address range perms: large range [0x87ebf040, 0xb60e053f) (undefined)
==7462== Use of uninitialised value of size 8
==7462==    at 0x483FED7: strcmp (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==7462==    by 0x10AEF8: createLineage (lineage.c:88)
==7462==    by 0x10BAEB: node_HSP (retrieveInfo.c:232)
==7462==    by 0x10B469: node_Iteration (retrieveInfo.c:106)
==7462==    by 0x10B310: blastOutPut_iteration (retrieveInfo.c:69)
==7462==    by 0x1095F1: main (parsing.c:36)
==7462== 
==7462== Invalid read of size 1
==7462==    at 0x483FED7: strcmp (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==7462==    by 0x10AEF8: createLineage (lineage.c:88)
==7462==    by 0x10BAEB: node_HSP (retrieveInfo.c:232)
==7462==    by 0x10B469: node_Iteration (retrieveInfo.c:106)
==7462==    by 0x10B310: blastOutPut_iteration (retrieveInfo.c:69)
==7462==    by 0x1095F1: main (parsing.c:36)
==7462==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==7462== 
==7462== 
==7462== Process terminating with default action of signal 11 (SIGSEGV)
==7462==  Access not within mapped region at address 0x0
==7462==    at 0x483FED7: strcmp (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==7462==    by 0x10AEF8: createLineage (lineage.c:88)
==7462==    by 0x10BAEB: node_HSP (retrieveInfo.c:232)
==7462==    by 0x10B469: node_Iteration (retrieveInfo.c:106)
==7462==    by 0x10B310: blastOutPut_iteration (retrieveInfo.c:69)
==7462==    by 0x1095F1: main (parsing.c:36)
==7462==  If you believe this happened as a result of a stack
==7462==  overflow in your program's main thread (unlikely but
==7462==  possible), you can try to increase the size of the
==7462==  main thread stack using the --main-stacksize= flag.
==7462==  The main thread stack size used in this run was 8388608.
==7462== 
==7462== HEAP SUMMARY:
==7462==     in use at exit: 2,573,522,456 bytes in 10,137,144 blocks
==7462==   total heap usage: 10,142,596 allocs, 5,452 frees, 2,574,591,297 bytes allocated
==7462== 
==7462== LEAK SUMMARY:
==7462==    definitely lost: 873 bytes in 7 blocks
==7462==    indirectly lost: 0 bytes in 0 blocks
==7462==      possibly lost: 1,547,971,070 bytes in 2 blocks
==7462==    still reachable: 1,025,550,513 bytes in 10,137,135 blocks
==7462==         suppressed: 0 bytes in 0 blocks
==7462== Rerun with --leak-check=full to see details of leaked memory
==7462== 
==7462== Use --track-origins=yes to see where uninitialised values come from
==7462== For lists of detected and suppressed errors, rerun with: -s
==7462== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
