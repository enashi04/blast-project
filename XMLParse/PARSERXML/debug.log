==19971== Memcheck, a memory error detector
==19971== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==19971== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==19971== Command: ./parsing -m bronze
==19971== Parent PID: 1712
==19971== 
==19971== Conditional jump or move depends on uninitialised value(s)
==19971==    at 0x483F0B7: strcpy (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==19971==    by 0x10B036: tag_value (converttoJSON.c:374)
==19971==    by 0x4868B1B: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==19971==    by 0x486972F: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==19971==    by 0x4866B85: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==19971==    by 0x48680CD: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==19971==    by 0x486BE7F: XML_ParseBuffer (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==19971==    by 0x10B10E: test_error (converttoJSON.c:398)
==19971==    by 0x1096DA: main (parsing.c:60)
==19971== 
==19971== Conditional jump or move depends on uninitialised value(s)
==19971==    at 0x483EFA9: __strlen_sse2 (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==19971==    by 0x10A371: getSpecies (converttoJSON.c:20)
==19971==    by 0x10B027: tag_value (converttoJSON.c:374)
==19971==    by 0x4868B1B: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==19971==    by 0x486972F: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==19971==    by 0x486BE7F: XML_ParseBuffer (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==19971==    by 0x10B10E: test_error (converttoJSON.c:398)
==19971==    by 0x1096DA: main (parsing.c:60)
==19971== 
==19971== Conditional jump or move depends on uninitialised value(s)
==19971==    at 0x483EFA9: __strlen_sse2 (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==19971==    by 0x10A404: getSpecies (converttoJSON.c:22)
==19971==    by 0x10B027: tag_value (converttoJSON.c:374)
==19971==    by 0x4868B1B: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==19971==    by 0x486972F: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==19971==    by 0x486BE7F: XML_ParseBuffer (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==19971==    by 0x10B10E: test_error (converttoJSON.c:398)
==19971==    by 0x1096DA: main (parsing.c:60)
==19971== 
==19971== Invalid read of size 1
==19971==    at 0x483F094: strcpy (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==19971==    by 0x10B036: tag_value (converttoJSON.c:374)
==19971==    by 0x4868B1B: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==19971==    by 0x486972F: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==19971==    by 0x486BE7F: XML_ParseBuffer (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==19971==    by 0x10B10E: test_error (converttoJSON.c:398)
==19971==    by 0x1096DA: main (parsing.c:60)
==19971==  Address 0x7508fe0 is 0 bytes after a block of size 0 alloc'd
==19971==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==19971==    by 0x10A379: getSpecies (converttoJSON.c:20)
==19971==    by 0x10B027: tag_value (converttoJSON.c:374)
==19971==    by 0x4868B1B: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==19971==    by 0x486972F: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==19971==    by 0x486BE7F: XML_ParseBuffer (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==19971==    by 0x10B10E: test_error (converttoJSON.c:398)
==19971==    by 0x1096DA: main (parsing.c:60)
==19971== 
==19971== Invalid read of size 8
==19971==    at 0x10B195: hash_index (readTaxonomy.c:10)
==19971==    by 0x10B599: ht_search (readTaxonomy.c:111)
==19971==    by 0x10B04C: tag_value (converttoJSON.c:375)
==19971==    by 0x4868B1B: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==19971==    by 0x486972F: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==19971==    by 0x486BE7F: XML_ParseBuffer (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==19971==    by 0x10B10E: test_error (converttoJSON.c:398)
==19971==    by 0x1096DA: main (parsing.c:60)
==19971==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==19971== 
==19971== 
==19971== Process terminating with default action of signal 11 (SIGSEGV)
==19971==  Access not within mapped region at address 0x0
==19971==    at 0x10B195: hash_index (readTaxonomy.c:10)
==19971==    by 0x10B599: ht_search (readTaxonomy.c:111)
==19971==    by 0x10B04C: tag_value (converttoJSON.c:375)
==19971==    by 0x4868B1B: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==19971==    by 0x486972F: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==19971==    by 0x486BE7F: XML_ParseBuffer (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==19971==    by 0x10B10E: test_error (converttoJSON.c:398)
==19971==    by 0x1096DA: main (parsing.c:60)
==19971==  If you believe this happened as a result of a stack
==19971==  overflow in your program's main thread (unlikely but
==19971==  possible), you can try to increase the size of the
==19971==  main thread stack using the --main-stacksize= flag.
==19971==  The main thread stack size used in this run was 8388608.
==19971== 
==19971== HEAP SUMMARY:
==19971==     in use at exit: 631,167,077 bytes in 6,442,405 blocks
==19971==   total heap usage: 6,442,411 allocs, 6 frees, 631,181,405 bytes allocated
==19971== 
==19971== LEAK SUMMARY:
==19971==    definitely lost: 6,692 bytes in 138 blocks
==19971==    indirectly lost: 0 bytes in 0 blocks
==19971==      possibly lost: 0 bytes in 0 blocks
==19971==    still reachable: 631,160,385 bytes in 6,442,267 blocks
==19971==         suppressed: 0 bytes in 0 blocks
==19971== Rerun with --leak-check=full to see details of leaked memory
==19971== 
==19971== Use --track-origins=yes to see where uninitialised values come from
==19971== For lists of detected and suppressed errors, rerun with: -s
==19971== ERROR SUMMARY: 72 errors from 5 contexts (suppressed: 0 from 0)
