==15252== Memcheck, a memory error detector
==15252== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==15252== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==15252== Command: ./parsing -m bronze -o output.json stdin.xml
==15252== Parent PID: 2752
==15252== 
==15252== Conditional jump or move depends on uninitialised value(s)
==15252==    at 0x483EFB8: __strlen_sse2 (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==15252==    by 0x10B02C: tag_value (converttoJSON.c:372)
==15252==    by 0x4868B1B: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==15252==    by 0x486972F: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==15252==    by 0x4866B85: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==15252==    by 0x48680CD: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==15252==    by 0x486BE7F: XML_ParseBuffer (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==15252==    by 0x10B120: test_error (converttoJSON.c:401)
==15252==    by 0x1096FA: main (parsing.c:60)
==15252== 
==15252== Conditional jump or move depends on uninitialised value(s)
==15252==    at 0x483EFB8: __strlen_sse2 (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==15252==    by 0x10AFAB: tag_value (converttoJSON.c:364)
==15252==    by 0x4868B1B: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==15252==    by 0x486972F: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==15252==    by 0x4866B85: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==15252==    by 0x48680CD: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==15252==    by 0x486BE7F: XML_ParseBuffer (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==15252==    by 0x10B120: test_error (converttoJSON.c:401)
==15252==    by 0x1096FA: main (parsing.c:60)
==15252== 
==15252== Invalid read of size 1
==15252==    at 0x483EFA6: __strlen_sse2 (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==15252==    by 0x10AFAB: tag_value (converttoJSON.c:364)
==15252==    by 0x4868B1B: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==15252==    by 0x486972F: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==15252==    by 0x486BE7F: XML_ParseBuffer (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==15252==    by 0x10B120: test_error (converttoJSON.c:401)
==15252==    by 0x1096FA: main (parsing.c:60)
==15252==  Address 0x7508fe0 is 0 bytes after a block of size 0 alloc'd
==15252==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==15252==    by 0x10A393: getSpecies (converttoJSON.c:24)
==15252==    by 0x10AFA3: tag_value (converttoJSON.c:364)
==15252==    by 0x4868B1B: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==15252==    by 0x486972F: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==15252==    by 0x486BE7F: XML_ParseBuffer (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==15252==    by 0x10B120: test_error (converttoJSON.c:401)
==15252==    by 0x1096FA: main (parsing.c:60)
==15252== 
==15252== Argument 'size' of function malloc has a fishy (possibly negative) value: -40
==15252==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==15252==    by 0x10A393: getSpecies (converttoJSON.c:24)
==15252==    by 0x10AFA3: tag_value (converttoJSON.c:364)
==15252==    by 0x4868B1B: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==15252==    by 0x486972F: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==15252==    by 0x486BE7F: XML_ParseBuffer (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==15252==    by 0x10B120: test_error (converttoJSON.c:401)
==15252==    by 0x1096FA: main (parsing.c:60)
==15252== 
==15252== 
==15252== Process terminating with default action of signal 11 (SIGSEGV)
==15252==  Access not within mapped region at address 0x0
==15252==    at 0x483EFA6: __strlen_sse2 (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==15252==    by 0x10AFAB: tag_value (converttoJSON.c:364)
==15252==    by 0x4868B1B: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==15252==    by 0x486972F: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==15252==    by 0x486BE7F: XML_ParseBuffer (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==15252==    by 0x10B120: test_error (converttoJSON.c:401)
==15252==    by 0x1096FA: main (parsing.c:60)
==15252==  If you believe this happened as a result of a stack
==15252==  overflow in your program's main thread (unlikely but
==15252==  possible), you can try to increase the size of the
==15252==  main thread stack using the --main-stacksize= flag.
==15252==  The main thread stack size used in this run was 8388608.
==15252== 
==15252== HEAP SUMMARY:
==15252==     in use at exit: 631,186,813 bytes in 6,443,255 blocks
==15252==   total heap usage: 6,443,261 allocs, 6 frees, 631,204,213 bytes allocated
==15252== 
==15252== LEAK SUMMARY:
==15252==    definitely lost: 25,484 bytes in 986 blocks
==15252==    indirectly lost: 0 bytes in 0 blocks
==15252==      possibly lost: 0 bytes in 0 blocks
==15252==    still reachable: 631,161,329 bytes in 6,442,269 blocks
==15252==         suppressed: 0 bytes in 0 blocks
==15252== Rerun with --leak-check=full to see details of leaked memory
==15252== 
==15252== Use --track-origins=yes to see where uninitialised values come from
==15252== For lists of detected and suppressed errors, rerun with: -s
==15252== ERROR SUMMARY: 495 errors from 4 contexts (suppressed: 0 from 0)
