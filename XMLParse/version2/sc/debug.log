==18133== Memcheck, a memory error detector
==18133== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==18133== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==18133== Command: ./parsingv2 -m bronze -o opt.csv stdin.xml
==18133== Parent PID: 13286
==18133== 
==18133== Invalid read of size 4
==18133==    at 0x49018A6: __vfprintf_internal (vfprintf-internal.c:1328)
==18133==    by 0x48ECC69: fprintf (fprintf.c:32)
==18133==    by 0x109873: tag_value (parsingv2.c:183)
==18133==    by 0x4868B1B: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==18133==    by 0x486972F: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==18133==    by 0x4866B85: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==18133==    by 0x48680CD: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==18133==    by 0x486BE3F: XML_ParseBuffer (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==18133==    by 0x109CE2: main (parsingv2.c:298)
==18133==  Address 0xc0 is not stack'd, malloc'd or (recently) free'd
==18133== 
==18133== 
==18133== Process terminating with default action of signal 11 (SIGSEGV)
==18133==  Access not within mapped region at address 0xC0
==18133==    at 0x49018A6: __vfprintf_internal (vfprintf-internal.c:1328)
==18133==    by 0x48ECC69: fprintf (fprintf.c:32)
==18133==    by 0x109873: tag_value (parsingv2.c:183)
==18133==    by 0x4868B1B: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==18133==    by 0x486972F: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==18133==    by 0x4866B85: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==18133==    by 0x48680CD: ??? (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==18133==    by 0x486BE3F: XML_ParseBuffer (in /usr/lib/x86_64-linux-gnu/libexpat.so.1.6.11)
==18133==    by 0x109CE2: main (parsingv2.c:298)
==18133==  If you believe this happened as a result of a stack
==18133==  overflow in your program's main thread (unlikely but
==18133==  possible), you can try to increase the size of the
==18133==  main thread stack using the --main-stacksize= flag.
==18133==  The main thread stack size used in this run was 8388608.
==18133== 
==18133== HEAP SUMMARY:
==18133==     in use at exit: 20,452 bytes in 52 blocks
==18133==   total heap usage: 54 allocs, 2 frees, 25,572 bytes allocated
==18133== 
==18133== LEAK SUMMARY:
==18133==    definitely lost: 0 bytes in 0 blocks
==18133==    indirectly lost: 0 bytes in 0 blocks
==18133==      possibly lost: 0 bytes in 0 blocks
==18133==    still reachable: 20,452 bytes in 52 blocks
==18133==         suppressed: 0 bytes in 0 blocks
==18133== Rerun with --leak-check=full to see details of leaked memory
==18133== 
==18133== For lists of detected and suppressed errors, rerun with: -s
==18133== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
