==460== Memcheck, a memory error detector
==460== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==460== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==460== Command: ./ballast -p MYCO.blastp -o tesst
==460== Parent PID: 9
==460== 
==460== Conditional jump or move depends on uninitialised value(s)
==460==    at 0x483B969: strcat (vg_replace_strmem.c:308)
==460==    by 0x10A697: loadHSP (loadhsp.c:138)
==460==    by 0x1095E7: main (ballast.c:146)
==460== 
==460== Source and destination overlap in strcpy(0x1ffefffcb0, 0x1ffefffcbc)
==460==    at 0x483BE88: strcpy (vg_replace_strmem.c:511)
==460==    by 0x10AA00: loadHSP (loadhsp.c:195)
==460==    by 0x1095E7: main (ballast.c:146)
==460== 
==460== Conditional jump or move depends on uninitialised value(s)
==460==    at 0x483B969: strcat (vg_replace_strmem.c:308)
==460==    by 0x10AA75: loadHSP (loadhsp.c:206)
==460==    by 0x1095E7: main (ballast.c:146)
==460== 
==460== Conditional jump or move depends on uninitialised value(s)
==460==    at 0x483B969: strcat (vg_replace_strmem.c:308)
==460==    by 0x10A697: loadHSP (loadhsp.c:138)
==460==    by 0x1096A9: main (ballast.c:156)
==460== 
==460== Source and destination overlap in strcpy(0x1ffefffcb0, 0x1ffefffcbc)
==460==    at 0x483BE88: strcpy (vg_replace_strmem.c:511)
==460==    by 0x10AA00: loadHSP (loadhsp.c:195)
==460==    by 0x1096A9: main (ballast.c:156)
==460== 
==460== Conditional jump or move depends on uninitialised value(s)
==460==    at 0x483B969: strcat (vg_replace_strmem.c:308)
==460==    by 0x10AA75: loadHSP (loadhsp.c:206)
==460==    by 0x1096A9: main (ballast.c:156)
==460== 
==460== Conditional jump or move depends on uninitialised value(s)
==460==    at 0x483B938: index (vg_replace_strmem.c:250)
==460==    by 0x10BB44: handlegaps (handlegaps.c:101)
==460==    by 0x10B1A8: loadHSP (loadhsp.c:334)
==460==    by 0x1096A9: main (ballast.c:156)
==460== 
==460== Conditional jump or move depends on uninitialised value(s)
==460==    at 0x483B94E: index (vg_replace_strmem.c:250)
==460==    by 0x10BB44: handlegaps (handlegaps.c:101)
==460==    by 0x10B1A8: loadHSP (loadhsp.c:334)
==460==    by 0x1096A9: main (ballast.c:156)
==460== 
==460== Conditional jump or move depends on uninitialised value(s)
==460==    at 0x4840AF3: strcspn (vg_replace_strmem.c:1735)
==460==    by 0x10BB70: handlegaps (handlegaps.c:104)
==460==    by 0x10B1A8: loadHSP (loadhsp.c:334)
==460==    by 0x1096A9: main (ballast.c:156)
==460== 
==460== Invalid read of size 8
==460==    at 0x10B4BC: loadHSP (loadhsp.c:410)
==460==    by 0x1096A9: main (ballast.c:156)
==460==  Address 0x4a28018 is 0 bytes after a block of size 4,072 alloc'd
==460==    at 0x483877F: malloc (vg_replace_malloc.c:307)
==460==    by 0x10953B: main (ballast.c:128)
==460== 
==460== Invalid write of size 8
==460==    at 0x10B4D9: loadHSP (loadhsp.c:410)
==460==    by 0x1096A9: main (ballast.c:156)
==460==  Address 0x4a28018 is 0 bytes after a block of size 4,072 alloc'd
==460==    at 0x483877F: malloc (vg_replace_malloc.c:307)
==460==    by 0x10953B: main (ballast.c:128)
==460== 
==460== Invalid write of size 8
==460==    at 0x10B5AB: loadHSP (loadhsp.c:420)
==460==    by 0x1096A9: main (ballast.c:156)
==460==  Address 0x4a5ad28 is 0 bytes after a block of size 4,072 alloc'd
==460==    at 0x483877F: malloc (vg_replace_malloc.c:307)
==460==    by 0x10A361: loadHSP (loadhsp.c:76)
==460==    by 0x1096A9: main (ballast.c:156)
==460== 
==460== Invalid write of size 1
==460==    at 0x10B5FE: loadHSP (loadhsp.c:423)
==460==    by 0x1096A9: main (ballast.c:156)
==460==  Address 0x4a26fee is 0 bytes after a block of size 510 alloc'd
==460==    at 0x483877F: malloc (vg_replace_malloc.c:307)
==460==    by 0x109526: main (ballast.c:127)
==460== 
==460== Conditional jump or move depends on uninitialised value(s)
==460==    at 0x10B54C: loadHSP (loadhsp.c:418)
==460==    by 0x1096A9: main (ballast.c:156)
==460== 
==460== Conditional jump or move depends on uninitialised value(s)
==460==    at 0x10B570: loadHSP (loadhsp.c:418)
==460==    by 0x1096A9: main (ballast.c:156)
==460== 
==460== Conditional jump or move depends on uninitialised value(s)
==460==    at 0x10B594: loadHSP (loadhsp.c:418)
==460==    by 0x1096A9: main (ballast.c:156)
==460== 
==460== Invalid read of size 1
==460==    at 0x10B547: loadHSP (loadhsp.c:418)
==460==    by 0x1096A9: main (ballast.c:156)
==460==  Address 0x4a5d0ec is 0 bytes after a block of size 524 alloc'd
==460==    at 0x483AD7B: realloc (vg_replace_malloc.c:834)
==460==    by 0x10AB84: loadHSP (loadhsp.c:223)
==460==    by 0x1096A9: main (ballast.c:156)
==460== 
==460== Invalid read of size 1
==460==    at 0x10B56B: loadHSP (loadhsp.c:418)
==460==    by 0x1096A9: main (ballast.c:156)
==460==  Address 0x4a5d0ec is 0 bytes after a block of size 524 alloc'd
==460==    at 0x483AD7B: realloc (vg_replace_malloc.c:834)
==460==    by 0x10AB84: loadHSP (loadhsp.c:223)
==460==    by 0x1096A9: main (ballast.c:156)
==460== 
==460== Invalid read of size 1
==460==    at 0x10B58F: loadHSP (loadhsp.c:418)
==460==    by 0x1096A9: main (ballast.c:156)
==460==  Address 0x4a5d0ec is 0 bytes after a block of size 524 alloc'd
==460==    at 0x483AD7B: realloc (vg_replace_malloc.c:834)
==460==    by 0x10AB84: loadHSP (loadhsp.c:223)
==460==    by 0x1096A9: main (ballast.c:156)
==460== 
==460== Invalid read of size 1
==460==    at 0x10B5F7: loadHSP (loadhsp.c:423)
==460==    by 0x1096A9: main (ballast.c:156)
==460==  Address 0x4a5d0ec is 0 bytes after a block of size 524 alloc'd
==460==    at 0x483AD7B: realloc (vg_replace_malloc.c:834)
==460==    by 0x10AB84: loadHSP (loadhsp.c:223)
==460==    by 0x1096A9: main (ballast.c:156)
==460== 
==460== Invalid read of size 1
==460==    at 0x49ABDD0: __strchr_avx2 (strchr-avx2.S:49)
==460==    by 0x10BB44: handlegaps (handlegaps.c:101)
==460==    by 0x10B1A8: loadHSP (loadhsp.c:334)
==460==    by 0x1096A9: main (ballast.c:156)
==460==  Address 0x4a738df is 2 bytes after a block of size 77 alloc'd
==460==    at 0x483877F: malloc (vg_replace_malloc.c:307)
==460==    by 0x10AA5B: loadHSP (loadhsp.c:204)
==460==    by 0x1096A9: main (ballast.c:156)
==460== 
==460== Invalid read of size 1
==460==    at 0x4840AEB: strcspn (vg_replace_strmem.c:1735)
==460==    by 0x10BB70: handlegaps (handlegaps.c:104)
==460==    by 0x10B1A8: loadHSP (loadhsp.c:334)
==460==    by 0x1096A9: main (ballast.c:156)
==460==  Address 0x4a738df is 2 bytes after a block of size 77 alloc'd
==460==    at 0x483877F: malloc (vg_replace_malloc.c:307)
==460==    by 0x10AA5B: loadHSP (loadhsp.c:204)
==460==    by 0x1096A9: main (ballast.c:156)
==460== 
==460== Invalid write of size 1
==460==    at 0x10BAB6: handlegaps (handlegaps.c:86)
==460==    by 0x10B1A8: loadHSP (loadhsp.c:334)
==460==    by 0x1096A9: main (ballast.c:156)
==460==  Address 0x4a9a299 is 0 bytes after a block of size 73 alloc'd
==460==    at 0x483877F: malloc (vg_replace_malloc.c:307)
==460==    by 0x10AA5B: loadHSP (loadhsp.c:204)
==460==    by 0x1096A9: main (ballast.c:156)
==460== 
==460== Invalid write of size 8
==460==    at 0x10B646: loadHSP (loadhsp.c:432)
==460==    by 0x1096A9: main (ballast.c:156)
==460==  Address 0x4a9cc20 is 8 bytes after a block of size 4,072 alloc'd
==460==    at 0x483877F: malloc (vg_replace_malloc.c:307)
==460==    by 0x10A361: loadHSP (loadhsp.c:76)
==460==    by 0x1096A9: main (ballast.c:156)
==460== 
==460== Invalid write of size 8
==460==    at 0x10B683: loadHSP (loadhsp.c:438)
==460==    by 0x1096A9: main (ballast.c:156)
==460==  Address 0x4a9cc28 is 16 bytes after a block of size 4,072 alloc'd
==460==    at 0x483877F: malloc (vg_replace_malloc.c:307)
==460==    by 0x10A361: loadHSP (loadhsp.c:76)
==460==    by 0x1096A9: main (ballast.c:156)
==460== 

valgrind: m_mallocfree.c:303 (get_bszB_as_is): Assertion 'bszB_lo == bszB_hi' failed.
valgrind: Heap block lo/hi size mismatch: lo = 576, hi = 0.
This is probably caused by your program erroneously writing past the
end of a heap block and corrupting heap metadata.  If you fix any
invalid writes reported by Memcheck, this assertion failure will
probably go away.  Please try that before reporting this as a bug.


host stacktrace:
==460==    at 0x58047B6A: show_sched_status_wrk (m_libcassert.c:406)
==460==    by 0x58047C87: report_and_quit (m_libcassert.c:477)
==460==    by 0x58047E17: vgPlain_assert_fail (m_libcassert.c:543)
==460==    by 0x580522E4: get_bszB_as_is (m_mallocfree.c:303)
==460==    by 0x580522E4: is_inuse_block (m_mallocfree.c:331)
==460==    by 0x580522E4: vgPlain_describe_arena_addr (m_mallocfree.c:1592)
==460==    by 0x5803ECEA: vgPlain_describe_addr (m_addrinfo.c:185)
==460==    by 0x5803DB3F: vgMemCheck_update_Error_extra (mc_errors.c:1185)
==460==    by 0x58042BF4: vgPlain_maybe_record_error (m_errormgr.c:822)
==460==    by 0x5803CFA8: vgMemCheck_record_address_error (mc_errors.c:765)
==460==    by 0x58018504: mc_LOADVn_slow (mc_main.c:1557)
==460==    by 0x100412784B: ???
==460==    by 0x1002E8DF2F: ???
==460==    by 0x1002E8DF17: ???
==460==    by 0x1002E8DF2F: ???
==460==    by 0x1002E8DF3F: ???

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 460)
==460==    at 0x483B940: index (vg_replace_strmem.c:250)
==460==    by 0x10BB44: handlegaps (handlegaps.c:101)
==460==    by 0x10B1A8: loadHSP (loadhsp.c:334)
==460==    by 0x1096A9: main (ballast.c:156)
client stack range: [0x1FFEFFE000 0x1FFF000FFF] client SP: 0x1FFEFFF928
valgrind stack range: [0x1002D8E000 0x1002E8DFFF] top usage: 18472 of 1048576


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

