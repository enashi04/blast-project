==28125== Memcheck, a memory error detector
==28125== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==28125== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==28125== Command: ./ballast -p MYCO.blastp -o test
==28125== Parent PID: 27650
==28125== 
==28125== Invalid write of size 8
==28125==    at 0x10A796: loadHSP (loadhsp.c:90)
==28125==    by 0x1098A6: main (ballast.c:153)
==28125==  Address 0x4a54f28 is 0 bytes after a block of size 8 alloc'd
==28125==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==28125==    by 0x10A762: loadHSP (loadhsp.c:85)
==28125==    by 0x1098A6: main (ballast.c:153)
==28125== 

valgrind: m_mallocfree.c:280 (mk_plain_bszB): Assertion 'bszB != 0' failed.
valgrind: This is probably caused by your program erroneously writing past the
end of a heap block and corrupting heap metadata.  If you fix any
invalid writes reported by Memcheck, this assertion failure will
probably go away.  Please try that before reporting this as a bug.


host stacktrace:
==28125==    at 0x58046FFA: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux)
==28125==    by 0x58047127: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux)
==28125==    by 0x580472CB: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux)
==28125==    by 0x580519A4: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux)
==28125==    by 0x58005BF7: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux)
==28125==    by 0x580A7204: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux)
==28125==    by 0x580F5FD4: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux)

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 28125)
==28125==    at 0x483B723: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==28125==    by 0x483E017: realloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==28125==    by 0x10A7F9: loadHSP (loadhsp.c:96)
==28125==    by 0x1098A6: main (ballast.c:153)
client stack range: [0x1FFEFFE000 0x1FFF000FFF] client SP: 0x1FFEFFF880
valgrind stack range: [0x1002BAA000 0x1002CA9FFF] top usage: 18696 of 1048576


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

