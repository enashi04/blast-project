==34048== Memcheck, a memory error detector
==34048== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==34048== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==34048== Command: ./ballast -p ../blastpFiles/output.blastp -o testing
==34048== Parent PID: 5822
==34048== 
==34048== Invalid read of size 1
==34048==    at 0x483EFA6: __strlen_sse2 (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==34048==    by 0x10E0C4: profilBuilding (profilBuilding.c:217)
==34048==    by 0x10A9C4: main (ballast.c:176)
==34048==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==34048== 
==34048== 
==34048== Process terminating with default action of signal 11 (SIGSEGV)
==34048==  Access not within mapped region at address 0x0
==34048==    at 0x483EFA6: __strlen_sse2 (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==34048==    by 0x10E0C4: profilBuilding (profilBuilding.c:217)
==34048==    by 0x10A9C4: main (ballast.c:176)
==34048==  If you believe this happened as a result of a stack
==34048==  overflow in your program's main thread (unlikely but
==34048==  possible), you can try to increase the size of the
==34048==  main thread stack using the --main-stacksize= flag.
==34048==  The main thread stack size used in this run was 8388608.
==34048== 
==34048== HEAP SUMMARY:
==34048==     in use at exit: 1,279,415 bytes in 1,500 blocks
==34048==   total heap usage: 4,991 allocs, 3,491 frees, 2,203,881 bytes allocated
==34048== 
==34048== LEAK SUMMARY:
==34048==    definitely lost: 488,657 bytes in 122 blocks
==34048==    indirectly lost: 0 bytes in 0 blocks
==34048==      possibly lost: 0 bytes in 0 blocks
==34048==    still reachable: 790,758 bytes in 1,378 blocks
==34048==         suppressed: 0 bytes in 0 blocks
==34048== Rerun with --leak-check=full to see details of leaked memory
==34048== 
==34048== For lists of detected and suppressed errors, rerun with: -s
==34048== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
